/**
\page protocol_buffers_tutorial Tutorial
\tableofcontents

\section protocol_buffers_simple A simple example

The code provided in \c a_simple_example.cpp demonstrates the simplest 
possible use case for this library - a basic structure is defined, 
serialized, and deserialized.

\include examples/protocol_buffers/a_simple_example.cpp

"filename" output:

\code
0000000: 0801 120c 4865 6c6c 6f20 576f 726c 6421  ....Hello World!
0000010: 1a83 8080 8000 0203 04
\endcode

\section protocol_buffers_nested Nested serializable types

As the protocol buffer specification allows for strings of arbitrary binary
data, nested serializable types may be expressed naturally as demonstrated in
\c nested_types.cpp:

\include examples/protocol_buffers/nested_types.cpp

"filename" output:

\code
0000000: 0801 1290 8080 8000 0300 0000 0200 0000  ................
0000010: 0300 0000 0400 0000                      ........
\endcode
*/ 
